version: '3.8'

services:
  # OpenTelemetry Collector for telemetry collection only (no visualization)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./telemetry-data:/telemetry
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver

  # Claude Code container with Adios MCP
  claude-code:
    build:
      context: .
      dockerfile: Dockerfile.claude-code
    container_name: claude-code-adios
    environment:
      # Enable telemetry collection
      - CLAUDE_CODE_ENABLE_TELEMETRY=1
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_METRIC_EXPORT_INTERVAL=5000  # 5 seconds for detailed capture
      
      # Include all attributes for comprehensive tracking
      - OTEL_METRICS_INCLUDE_SESSION_ID=true
      - OTEL_METRICS_INCLUDE_VERSION=true
      - OTEL_METRICS_INCLUDE_ACCOUNT_UUID=true
      
      # Run Claude Code with dangerous flag for immediate interface
      - CLAUDE_CODE_DANGEROUS=true
      
      # User info for tracking - MUST be provided by user
      - USER_EMAIL=${USER_EMAIL}
      - USER_NAME=${USER_NAME}
      
      # Session tracking
      - SESSION_ID=${SESSION_ID:-}
    volumes:
      # Mount user's working directory
      - ${WORKSPACE_DIR:-./workspace}:/workspace
      - ./telemetry-data:/telemetry
      - ./session-logs:/logs
      # Mount export directory
      - ./exported-data:/exported-data
    working_dir: /workspace
    depends_on:
      - otel-collector
    stdin_open: true
    tty: true
    # Direct entrypoint already set in Dockerfile
    
    # Lifecycle hooks for automatic telemetry export
    labels:
      - "com.docker.compose.oneoff=False"
    
    # Export telemetry on container stop
    stop_signal: SIGTERM
    stop_grace_period: 30s

# Create export script that runs on container stop
  telemetry-exporter:
    image: alpine:latest
    container_name: telemetry-exporter
    volumes:
      - ./telemetry-data:/telemetry:ro
      - ./session-logs:/logs:ro
      - ./exported-data:/exported-data
      - ./export-telemetry.sh:/export-telemetry.sh:ro
    environment:
      - USER_EMAIL=${USER_EMAIL}
      - USER_NAME=${USER_NAME}
    command: /bin/sh -c "echo 'Telemetry exporter ready' && sleep infinity"
    depends_on:
      - claude-code

volumes:
  telemetry-data:
  session-logs: